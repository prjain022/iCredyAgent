services:
  ngrok-icredy-agent:
    image: ngrok/ngrok
    environment:
      - NGROK_AUTHTOKEN=${NGROK_AUTHTOKEN}
      - ICREDY_ACAPY_HTTP_PORT=${ICREDY_ACAPY_HTTP_PORT}
    ports:
      - 4052:4040
    command: http icredy-agent:${ICREDY_ACAPY_HTTP_PORT} --log stdout

  icredy-acapy-image-builder:
    pull_policy: missing
    build:
      context: ../plugins
      dockerfile: ./docker/Dockerfile
    image: icredy:plugins-acapy
    entrypoint: "/bin/bash"
    tty: true

  icredy-agent:
    pull_policy: missing
    build:
      context: ../services/aca-py
      dockerfile: Dockerfile.acapy
    image: icredy:icredy-agent
    depends_on:
      icredy-acapy-image-builder:
        condition: service_started
      icredy-db:
        condition: service_healthy
    environment:
      - ICREDY_ENV=${ICREDY_ENV}
      - NGROK_NAME=ngrok-icredy-agent
      - ICREDY_ACAPY_HTTP_PORT=${ICREDY_ACAPY_HTTP_PORT}
      - ICREDY_ACAPY_ADMIN_PORT=${ICREDY_ACAPY_ADMIN_PORT}
      - ICREDY_ACAPY_WALLET_NAME=${ICREDY_ACAPY_WALLET_NAME}
      - ICREDY_ACAPY_WALLET_ENCRYPTION_KEY=${ICREDY_ACAPY_WALLET_ENCRYPTION_KEY}
      - ICREDY_ACAPY_WALLET_SCHEME=${ICREDY_ACAPY_WALLET_SCHEME}
      - POSTGRESQL_HOST=${POSTGRESQL_HOST}
      - POSTGRESQL_USER=${POSTGRESQL_USER}
      - POSTGRESQL_PASSWORD=${POSTGRESQL_PASSWORD}
      - ICREDY_MULTITENANCY_CONFIGURATION_WALLET_TYPE=${ICREDY_MULTITENANCY_CONFIGURATION_WALLET_TYPE}
      - ICREDY_MULTITENANCY_CONFIGURATION_WALLET_NAME=${ICREDY_MULTITENANCY_CONFIGURATION_WALLET_NAME}
      - ACAPY_LOG_LEVEL=${ACAPY_LOG_LEVEL}
      - ACAPY_AUTO_PROVISION=${ACAPY_AUTO_PROVISION}
      - ACAPY_WALLET_TYPE=${ACAPY_WALLET_TYPE}
      - ACAPY_WALLET_STORAGE_TYPE=${ACAPY_WALLET_STORAGE_TYPE}
      - ACAPY_GENESIS_TRANSACTIONS_LIST=${ACAPY_GENESIS_TRANSACTIONS_LIST}
      - ACAPY_READ_ONLY_LEDGER=${ACAPY_READ_ONLY_LEDGER}
      - ACAPY_LABEL=${ACAPY_LABEL}
      - ACAPY_ADMIN_API_KEY=${ACAPY_ADMIN_API_KEY}
      - ACAPY_ADMIN_INSECURE_MODE=${ACAPY_ADMIN_INSECURE_MODE}
      - ACAPY_AUTO_ACCEPT_INVITES=${ACAPY_AUTO_ACCEPT_INVITES}
      - ACAPY_AUTO_ACCEPT_REQUESTS=${ACAPY_AUTO_ACCEPT_REQUESTS}
      - ACAPY_AUTO_RESPOND_MESSAGES=${ACAPY_AUTO_RESPOND_MESSAGES}
      - ACAPY_AUTO_RESPOND_CREDENTIAL_PROPOSAL=${ACAPY_AUTO_RESPOND_CREDENTIAL_PROPOSAL}
      - ACAPY_AUTO_RESPOND_CREDENTIAL_OFFER=${ACAPY_AUTO_RESPOND_CREDENTIAL_OFFER}
      - ACAPY_AUTO_RESPOND_CREDENTIAL_REQUEST=${ACAPY_AUTO_RESPOND_CREDENTIAL_REQUEST}
      - ACAPY_AUTO_RESPOND_PRESENTATION_PROPOSAL=${ACAPY_AUTO_RESPOND_PRESENTATION_PROPOSAL}
      - ACAPY_AUTO_RESPOND_PRESENTATION_REQUEST=${ACAPY_AUTO_RESPOND_PRESENTATION_REQUEST}
      - ACAPY_AUTO_VERIFY_PRESENTATION=${ACAPY_AUTO_VERIFY_PRESENTATION}
      - ACAPY_AUTO_PING_CONNECTION=${ACAPY_AUTO_PING_CONNECTION}
      - ACAPY_MONITOR_PING=${ACAPY_MONITOR_PING}
      - ACAPY_PUBLIC_INVITES=${ACAPY_PUBLIC_INVITES}
      - ACAPY_MULTITENANT=${ACAPY_MULTITENANT}
      - ACAPY_MULTITENANT_ADMIN=${ACAPY_MULTITENANT_ADMIN}
      - ACAPY_MULTITENANT_JWT_SECRET=${ACAPY_MULTITENANT_JWT_SECRET}
      - ACAPY_MULTITENANCY_CONFIGURATION=${ACAPY_MULTITENANCY_CONFIGURATION}
      - ACAPY_EMIT_NEW_DIDCOMM_PREFIX=${ACAPY_EMIT_NEW_DIDCOMM_PREFIX}
      - ACAPY_EMIT_NEW_DIDCOMM_MIME_TYPE=${ACAPY_EMIT_NEW_DIDCOMM_MIME_TYPE}
      - ACAPY_TAILS_SERVER_BASE_URL=${ACAPY_TAILS_SERVER_BASE_URL}
      - ACAPY_TAILS_SERVER_UPLOAD_URL=${ACAPY_TAILS_SERVER_UPLOAD_URL}
      - ACAPY_PRESERVE_EXCHANGE_RECORDS=${ACAPY_PRESERVE_EXCHANGE_RECORDS}
      - ACAPY_AUTO_STORE_CREDENTIAL=${ACAPY_AUTO_STORE_CREDENTIAL}
      - ACAPY_NOTIFY_REVOCATION=${ACAPY_NOTIFY_REVOCATION}
      - ACAPY_MONITOR_REVOCATION_NOTIFICATION=${ACAPY_MONITOR_REVOCATION_NOTIFICATION}
      - ACAPY_ENDORSER_ROLE=${ACAPY_ENDORSER_ROLE}
      - ACAPY_AUTO_REQUEST_ENDORSEMENT=${ACAPY_AUTO_REQUEST_ENDORSEMENT}
      - ACAPY_AUTO_WRITE_TRANSACTIONS=${ACAPY_AUTO_WRITE_TRANSACTIONS}
      - ACAPY_AUTO_PROMOTE_AUTHOR_DID=${ACAPY_AUTO_PROMOTE_AUTHOR_DID}
      - ACAPY_CREATE_REVOCATION_TRANSACTIONS=${ACAPY_CREATE_REVOCATION_TRANSACTIONS}
      - ACAPY_PLUGIN_CONFIG=${ACAPY_PLUGIN_CONFIG}
      - RUST_LOG=error
    ports:
      - ${ICREDY_ACAPY_ADMIN_PORT}:${ICREDY_ACAPY_ADMIN_PORT}
      - ${ICREDY_ACAPY_HTTP_PORT}:${ICREDY_ACAPY_HTTP_PORT}
    entrypoint: /bin/bash
    command: ["-c", "sleep 5; ./ngrok-wait.sh"]
    volumes:
      - "./plugin-config.yml:/home/aries/plugin-config.yml"
      - "./ledgers.yml:/home/aries/ledgers.yml"
    extra_hosts:
      - host.docker.internal:host-gateway

  icredy-db:
    image: "postgres:15"
    environment:
      - POSTGRES_USER=${POSTGRESQL_USER}
      - POSTGRES_PASSWORD=${POSTGRESQL_PASSWORD}
      - POSTGRES_DB=${POSTGRESQL_DB}
    ports:
      - ${POSTGRESQL_PORT}:5432
    volumes:
      - icredy-wallet:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    extra_hosts:
      - host.docker.internal:host-gateway

  
  endorser-agent:
    image: ghcr.io/openwallet-foundation/acapy-agent:py3.12-1.2.4
    depends_on:
      endorser-db:
        condition: service_healthy
    ports:
      - ${ACAPY_ENDORSER_ADMIN_PORT}:${ACAPY_ENDORSER_ADMIN_PORT}
      - ${ACAPY_ENDORSER_HTTP_PORT}:${ACAPY_ENDORSER_HTTP_PORT}
    entrypoint: /bin/bash
    command: [
        "-c",
        "sleep 5;
        aca-py start \
        --auto-provision
        --arg-file endorser-acapy-args.yml \
        --inbound-transport http '0.0.0.0' ${ACAPY_ENDORSER_HTTP_PORT} \
        --genesis-url '${ACAPY_GENESIS_URL}' \
        --endpoint ${ACAPY_ENDORSER_ENDPOINT} \
        --wallet-name '${ENDORSER_ACAPY_WALLET_DATABASE}' \
        --wallet-key '${ENDORSER_ACAPY_WALLET_ENCRYPTION_KEY}' \
        --wallet-type '${ENDORSER_ACAPY_WALLET_TYPE}' \
        --wallet-storage-type '${ENDORSER_ACAPY_WALLET_STORAGE_TYPE}' \
        --wallet-storage-config '{\"url\":\"${ENDORSER_POSTGRESQL_HOST}:5432\",\"max_connections\":5}' \
        --wallet-storage-creds '{\"account\":\"${POSTGRESQL_USER}\",\"password\":\"${POSTGRESQL_PASSWORD}\",\"admin_account\":\"${POSTGRESQL_USER}\",\"admin_password\":\"${POSTGRESQL_PASSWORD}\"}' \
        --wallet-name endorser-wallet  \
        --seed '${ACAPY_ENDORSER_SEED}' \
        --accept-taa on_file 1.3 \
        --admin '0.0.0.0' ${ACAPY_ENDORSER_ADMIN_PORT} \
        --label '${ENDORSER_AGENT_NAME}' \
        ${ENDORSER_ACAPY_ADMIN_CONFIG} \
        ",
      ]
    environment:
      - RUST_LOG=error
    volumes:
      - "./endorser-acapy-args.yml:/home/aries/endorser-acapy-args.yml"
    extra_hosts:
      - host.docker.internal:host-gateway


  endorser-db:
    image: "postgres:15"
    environment:
      - POSTGRES_USER=${POSTGRESQL_USER}
      - POSTGRES_PASSWORD=${POSTGRESQL_PASSWORD}
      - POSTGRES_DB=${POSTGRESQL_DB}
    ports:
      - ${ENDORSER_POSTGRESQL_PORT}:5432
    volumes:
      - endorser-wallet:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    extra_hosts:
      - host.docker.internal:host-gateway

  maildev:
    image: maildev/maildev
    ports:
      - "1080:1080"
      - "1025:1025"

volumes:
  icredy-wallet:
  endorser-wallet:
